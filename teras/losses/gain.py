import tensorflow as tf
from tensorflow.keras import losses


def discriminator_loss(y_preds, mask):
    """
    Discriminator loss based on the architecture and implementation
    of GAIN as proposed and implemented by
    Jinsung Yoon et al. in the paper
    GAIN: Missing Data Imputation using Generative Adversarial Nets.

    Reference(s):
        https://arxiv.org/abs/1806.02920
        https://github.com/jsyoon0823/GAIN

    Args:
        y_preds: Discriminator's predictions
        mask: Mask generated from inputs.
    """
    loss = -tf.reduce_mean(mask * tf.math.log(y_preds + 1e-8)
                           + (1 - mask) * tf.math.log(1. - y_preds + 1e-8))
    return loss


def generator_loss(generated_samples=None,
                   real_samples=None,
                   y_preds=None,
                   mask=None,
                   alpha=None):
    """
    Discriminator loss based on the architecture and implementation
    of GAIN as proposed and implemented by
    Jinsung Yoon et al. in the paper
    GAIN: Missing Data Imputation using Generative Adversarial Nets.
    This loss is made up of two components,
    gen_loss_1: Cross entropy loss which theoretically as proposed in the paper
        should be the same as used in discriminator loss but for some reason varies from it.
    gen_loss_2: MSE loss between the masked original and generated samples

    Reference(s):
        https://arxiv.org/abs/1806.02920
        https://github.com/jsyoon0823/GAIN

    Args:
        generated_samples: Samples generated by Generator
        real_samples: Real samples drawn from the dataset
        y_preds: Discriminator's output predicitons
        mask: Mask generated from the inputs
        alpha: The hyperparameter alpha used to control the
            weightage during addition of two losses.
    """
    gen_loss_1 = -tf.reduce_mean((1 - mask) * tf.math.log(y_preds + 1e-8))
    gen_loss_2 = losses.MSE(y_true=(mask * real_samples),
                            y_pred=(mask * generated_samples))
    loss = gen_loss_1 + alpha * gen_loss_2
    return loss
